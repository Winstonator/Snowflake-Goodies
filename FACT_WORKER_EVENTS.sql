{{
    config(
        materialized='incremental',
        unique_key='WORKER_EVENT_PK'
        )
}}

WITH
WORKER_EVENT AS (
    SELECT *, 'WKD' AS REC_SRC,
    CASE
    WHEN BP_TYPE = 'Requisition Compensation' THEN 
    TRIM(SUBSTRING(OVERALL_BP,CHARINDEX(':',TRIM(OVERALL_BP) )+1,10)) 
    ELSE NULL
    END AS REQ_ID,
    1 AS BATCH_KEY_ID
    FROM {{ source('STAGING','STG_WKD_ALL_WORKER_EVENTS') }} 
),

POSITION AS (
    SELECT POSITION_ID AS POSITIONID, POSITION_SK, EFF_DT, DISC_DT FROM {{ ref('DIM_POSITION') }}
),

EMPLOYEE AS (
    SELECT EMP_ID AS EMPID, EMP_SK, EFF_DT, DISC_DT FROM {{ ref('DIM_EMPLOYEE') }}
),

REQUISITION AS (
    SELECT JOB_REQ_ID AS JOB_REQ_ID, JOB_REQ_SK FROM {{ ref('DIM_REQUISITION') }}
),

APP AS (
    SELECT OVERALL_BP_WID AS BP_WID, CAND_APP_SK FROM {{ ref('DIM_APPLICATION') }}
)

SELECT 
WORKER_EVENT_PK,
POSITION_SK,
EMP_SK,
CAND_APP_SK,
JOB_REQ_SK,
EMP_ID,
POSITION_ID,
ACTION_EVENT_WID,
BP_EVENT_COMPLETED_WID,
TERM_WID,
OVERALL_BP,
OVERALL_BP_WID,
BP_PARENT_TYPE,
BP_TYPE,
BP_TRANSACTION,
BP_TRANSACTION_STATUS,
BP_EVENT_INITIATED_DTM,
BP_EVENT_COMPLETED_DTM,
BP_EVENT_COMPLETED_DT,
BP_EFF_DT,
BP_EVENT_COMPLETED_RECORDS,
EVENT_CLASSIFICATION_SENS,
BP_REASON_CATEGORY_SENS,
BP_REASON_SENS,
BP_CORRECTIONS,
BP_LAST_UPD_BY,
TERM_PAY_THROUGH_DT,
TERM_RESIGN_SUBMIT_DT,
TERM_REGRETTABLE_STATUS_SENS,
TERM_ELIGIBLE_FOR_REHIRE_IND_SENS,
MANAGER_REASON,
INVOLUNTARY,
RETIREMENT,
TERM_AVAIL_FOR_JOB_OVERLAP_IND_SENS,
TERM_ALL_COMMENTS_SENS,
TERM_SERVICE_YEARS,
LOA_LAST_WORK_DT,
LOARQ_FIRST_LEAVE_DT,
LOARQ_LAST_ESTIMATED_LEAVE_DT,
LOA_LAST_ACTUAL_LEAVE_DT,
LOA_FIRST_BACK_AT_WORK_DT,
LOARQ_TOTAL_LEAVE_DAYS,
LOA_ALL_ESI_BK_COMMENTS_SENS,
LOA_ALL_ESI_COMMENTS_SENS,
BP_DEF,
BP_STEP_TYPE,
BP_STEP_ORDER,
BP_EVENT_RECORD,
BP_STEP_DESC,
BP_STEP_STATUS,
BP_STEP_INITIATED_DTM,
BP_STEP_COMPLETED_DTM,
BP_STEP_COMPLETED_BY_NAME,
BP_STEP_COMPLETED_BY_PERSON,
BP_STEP_COMMENTS,
REC_SRC,
INS_BATCH_ID
FROM  (
SELECT 
    {{ dbt_utils.surrogate_key(['OVERALL_BP_WID','ACTION_EVENT_WID','BP_EVENT_COMPLETED_WID'])}} AS WORKER_EVENT_PK, --use hash for unique key for cdc 
    COALESCE(POSITION.POSITION_SK, '-1') AS POSITION_SK, 
    COALESCE(EMPLOYEE.EMP_SK, '-1') AS EMP_SK,  
    COALESCE(APP.CAND_APP_SK, '-1') AS CAND_APP_SK, 
    COALESCE(REQUISITION.JOB_REQ_SK, '-1') AS JOB_REQ_SK,
    EIN AS EMP_ID,
    POSITION_ID AS POSITION_ID,
    ACTION_EVENT_WID AS ACTION_EVENT_WID,
    BP_EVENT_COMPLETED_WID AS BP_EVENT_COMPLETED_WID,
    TERM_WID AS TERM_WID,
    OVERALL_BP AS OVERALL_BP,
    OVERALL_BP_WID AS OVERALL_BP_WID,
    BP_PARENT_TYPE AS BP_PARENT_TYPE,
    BP_TYPE AS BP_TYPE,
    BP_TRANSACTION AS BP_TRANSACTION,
    BP_TRANSACTION_STATUS AS BP_TRANSACTION_STATUS,
    BP_EVENT_INITIATED_DTM AS BP_EVENT_INITIATED_DTM,
    BP_EVENT_COMPLETED_DTM AS BP_EVENT_COMPLETED_DTM,
    BP_EVENT_COMPLETED_DT AS BP_EVENT_COMPLETED_DT,
    BP_EFFECTIVE_DT AS BP_EFF_DT,
    BP_EVENT_COMPLETED_RECORDS AS BP_EVENT_COMPLETED_RECORDS,
    EVENT_CLASSIFICATION_SENS AS EVENT_CLASSIFICATION_SENS,
    BP_REASON_CATEGORY_SENS AS BP_REASON_CATEGORY_SENS,
    BP_REASON_SENS AS BP_REASON_SENS,
    BP_CORRECTIONS AS BP_CORRECTIONS,
    BP_LAST_UPD_BY AS BP_LAST_UPD_BY,
    TERM_PAY_THROUGH_DT AS TERM_PAY_THROUGH_DT,
    TERM_RESIGN_SUBMIT_DT AS TERM_RESIGN_SUBMIT_DT,
    TERM_REGRETTABLE_STATUS_SENS AS TERM_REGRETTABLE_STATUS_SENS,
    TERM_ELIGIBLE_FOR_REHIRE_IND_SENS AS TERM_ELIGIBLE_FOR_REHIRE_IND_SENS,
    MANAGER_REASON AS MANAGER_REASON,
    INVOLUNTARY AS INVOLUNTARY,
    RETIREMENT AS RETIREMENT,
    TERM_AVAIL_FOR_JOB_OVERLAP_IND_SENS AS TERM_AVAIL_FOR_JOB_OVERLAP_IND_SENS,
    TERM_ALL_COMMENTS_SENS AS TERM_ALL_COMMENTS_SENS,
    TERM_SERVICE_YEARS AS TERM_SERVICE_YEARS,
    LOA_LAST_WORK_DT AS LOA_LAST_WORK_DT,
    LOARQ_FIRST_LEAVE_DT AS LOARQ_FIRST_LEAVE_DT,
    LOARQ_LAST_ESTIMATED_LEAVE_DT AS LOARQ_LAST_ESTIMATED_LEAVE_DT,
    LOA_LAST_ACTUAL_LEAVE_DT AS LOA_LAST_ACTUAL_LEAVE_DT,
    LOA_FIRST_BACK_AT_WORK_DT AS LOA_FIRST_BACK_AT_WORK_DT,
    LOARQ_TOTAL_LEAVE_DAYS AS LOARQ_TOTAL_LEAVE_DAYS,
    LOA_ALL_ESI_BK_COMMENTS_SENS AS LOA_ALL_ESI_BK_COMMENTS_SENS,
    LOA_ALL_ESI_COMMENTS_SENS AS LOA_ALL_ESI_COMMENTS_SENS,
    BP_DEFINITION AS BP_DEF,
    BP_STEP_TYPE AS BP_STEP_TYPE,
    BP_STEP_ORDER AS BP_STEP_ORDER,
    BP_EVENT_RECORD AS BP_EVENT_RECORD,
    BP_STEP_DESCRIPTION AS BP_STEP_DESC,
    BP_STEP_STATUS AS BP_STEP_STATUS,
    BP_STEP_INITIATED_DTM AS BP_STEP_INITIATED_DTM,
    BP_STEP_COMPLETED_DTM AS BP_STEP_COMPLETED_DTM,
    BP_STEP_COMPLETED_BY_NAME AS BP_STEP_COMPLETED_BY_NAME,
    BP_STEP_COMPLETED_BY_PERSON AS BP_STEP_COMPLETED_BY_PERSON,
    BP_STEP_COMMENTS AS BP_STEP_COMMENTS,
    REC_SRC AS REC_SRC,
    TO_NUMBER(TO_VARCHAR(CURRENT_TIMESTAMP, 'YYYYMMDDHH24MISS')) as INS_BATCH_ID,
    ROW_NUMBER() OVER(PARTITION BY OVERALL_BP_WID, ACTION_EVENT_WID, BP_EVENT_COMPLETED_WID
        ORDER BY BP_EVENT_COMPLETED_DT DESC) RN

FROM WORKER_EVENT

LEFT JOIN POSITION
ON WORKER_EVENT.POSITION_ID = POSITION.POSITIONID 
AND TO_DATE(WORKER_EVENT.BP_EVENT_COMPLETED_DT) BETWEEN TO_DATE(POSITION.EFF_DT) AND TO_DATE(POSITION.DISC_DT)

LEFT JOIN EMPLOYEE
ON WORKER_EVENT.EIN = EMPLOYEE.EMPID
AND TO_DATE(WORKER_EVENT.BP_EVENT_COMPLETED_DT) BETWEEN TO_DATE(EMPLOYEE.EFF_DT) AND TO_DATE(EMPLOYEE.DISC_DT)

LEFT JOIN APP
ON WORKER_EVENT.OVERALL_BP_WID = APP.BP_WID

LEFT JOIN REQUISITION
ON WORKER_EVENT.REQ_ID = REQUISITION.JOB_REQ_ID

{% if is_incremental() %}
    WHERE (WORKER_EVENT.BP_EVENT_COMPLETED_DT >= '{{ get_max_event_time('BP_EVENT_COMPLETED_DT') }}'
        OR 
    WORKER_EVENT_PK IN (
        SELECT WORKER_EVENT_PK FROM {{ this }}
        WHERE POSITION_SK = '-1' OR EMP_SK = '-1' OR CAND_APP_SK = '-1' OR JOB_REQ_SK = '-1')
    )
{% endif %}

)WHERE RN=1
