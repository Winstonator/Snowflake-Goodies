{{
    config(
        materialized='incremental',
        unique_key='JOB_POSTING_PK',
        full_refresh = false
        )
}}

WITH
POSTING AS (
    SELECT *, 'WKD' AS REC_SRC, 
    IFNULL(JOB_POSTING_DT, '1900-01-01') AS JOB_POST_DT,
    IFNULL(JOB_POSTING_LATEST_UPDATE_DT, '1900-01-01') AS JOB_POST_UPD_DT,
    GREATEST(JOB_POST_DT, JOB_POST_UPD_DT ) AS PAR_COLUMN
    FROM {{ source('STAGING','STG_WKD_JOB_POSTING') }} 
),

REQUISITION AS (
    SELECT JOB_REQ_ID AS REQ_ID, JOB_REQ_SK FROM {{ ref('DIM_REQUISITION') }}
)

SELECT 
JOB_POSTING_PK,
JOB_REQ_SK,
JOB_POSTING_ID,
JOB_REQ_ID,
JOB_REQ_WID,
JOB_POSTING_WID,
JOB_POSTING,
JOB_POSTING_TITLE,
JOB_POSTING_DESC,
JOB_POSTING_STATUS,
JOB_POSTING_SITE,
INT_POSTING_IND,
EXT_POSTING_IND,
JOB_POSTING_AGENCY,
JOB_POSTING_CONFIDENTIAL_IND,
JOB_POSTING_DT,
JOB_POSTING_LATEST_UPD_DT,
JOB_POSTING_LAST_UPD_DTM,
JOB_POSTING_CREATED_DTM,
CREATED_DT_SK,
JOB_POSTING_START_DT,
START_DT_SK,
JOB_POSTING_END_DT,
END_DT_SK,
EXT_PATH,
EXT_POSTING_URL,
EXT_APP_URL,
FORECASTED_PAYOUT_AMT,
JOB_POSTING_EVENT,
JOB_POSTING_UPD_EVENTS,
REC_SRC,
INS_BATCH_ID
FROM  (
SELECT 
    {{ dbt_utils.surrogate_key(['JOB_POSTING_ID'])}} AS JOB_POSTING_PK,
    COALESCE(REQUISITION.JOB_REQ_SK, '-1') AS JOB_REQ_SK, 
    JOB_POSTING_ID AS JOB_POSTING_ID,
    JOB_REQ_ID AS JOB_REQ_ID,
    JOB_REQ_WID AS JOB_REQ_WID,
    JOB_POSTING_WID AS JOB_POSTING_WID,
    JOB_POSTING AS JOB_POSTING,
    JOB_POSTING_TITLE AS JOB_POSTING_TITLE,
    JOB_POSTING_DESCRIPTION AS JOB_POSTING_DESC,
    JOB_POSTING_STATUS AS JOB_POSTING_STATUS,
    JOB_POSTING_SITE AS JOB_POSTING_SITE,
    INTERNAL_POSTING_IND AS INT_POSTING_IND,
    EXTERNAL_POSTING_IND AS EXT_POSTING_IND,
    JOB_POSTING_AGENCY AS JOB_POSTING_AGENCY,
    JOB_POSTING_CONFIDENTIAL_IND AS JOB_POSTING_CONFIDENTIAL_IND,
    JOB_POSTING_DT AS JOB_POSTING_DT,
    JOB_POSTING_LATEST_UPDATE_DT AS JOB_POSTING_LATEST_UPD_DT,
    JOB_POSTING_LAST_UPDATE_DTM AS JOB_POSTING_LAST_UPD_DTM,
    JOB_POSTING_CREATED_DTM AS JOB_POSTING_CREATED_DTM,
    TO_NUMBER(TO_VARCHAR(JOB_POSTING_CREATED_DTM::DATE, 'YYYYMMDD')) AS CREATED_DT_SK,
    JOB_POSTING_START_DT AS JOB_POSTING_START_DT,
    TO_NUMBER(TO_VARCHAR(JOB_POSTING_START_DT::DATE, 'YYYYMMDD')) AS START_DT_SK,
    JOB_POSTING_END_DT AS JOB_POSTING_END_DT,
    TO_NUMBER(TO_VARCHAR(JOB_POSTING_END_DT::DATE, 'YYYYMMDD')) AS END_DT_SK,
    EXTERNAL_PATH AS EXT_PATH,
    EXTERNAL_POSTING_URL AS EXT_POSTING_URL,
    EXTERNAL_APPLICATION_URL AS EXT_APP_URL,
    FORECASTED_PAYOUT_AMT AS FORECASTED_PAYOUT_AMT,
    JOB_POSTING_EVENT AS JOB_POSTING_EVENT,
    JOB_POSTING_UPDATE_EVENTS AS JOB_POSTING_UPD_EVENTS,
    REC_SRC AS REC_SRC,
    TO_NUMBER(TO_VARCHAR(CURRENT_TIMESTAMP, 'YYYYMMDDHH24MISS')) as INS_BATCH_ID,
    ROW_NUMBER() OVER(PARTITION BY JOB_POSTING_ID ORDER BY PAR_COLUMN DESC) RN

FROM POSTING

LEFT JOIN REQUISITION 
ON POSTING.JOB_REQ_ID = REQUISITION.REQ_ID

{% if is_incremental() %}
    WHERE (POSTING.PAR_COLUMN >= '{{ get_max_event_time('JOB_POSTING_DT') }}'
        OR 
        POSTING.PAR_COLUMN >= '{{ get_max_event_time('JOB_POSTING_LATEST_UPD_DT') }}'
    )
        OR
    {{ dbt_utils.surrogate_key(['JOB_POSTING_ID'])}} IN (
        SELECT JOB_POSTING_PK FROM {{ this }}
        WHERE JOB_REQ_SK ='-1' )
{% endif %}

)WHERE RN=1
