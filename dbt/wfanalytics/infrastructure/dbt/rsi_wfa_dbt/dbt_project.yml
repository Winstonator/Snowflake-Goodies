# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'rsi_wfa_dbt'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'default'

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
source-paths: ["models"]
analysis-paths: ["analysis"]
test-paths: ["tests"]
data-paths: ["data"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
    - "target"
    - "dbt_modules"

on-run-start:
  - "{{ dbt_external_tables.stage_external_sources() }}"
  - "{{ load_dim_employee_events_hist() }}"


on-run-end:
  - "{{ update_audit_table() }}"
#   - "{{ create_grant_roles('CORE') }}"
#   - "{{ create_grant_roles('ODS') }}"
#   - "{{ grant_wh_permissions() }}"
#   - "{{ grant_permissions('CORE') }}"
#   - "{{ grant_permissions('ODS') }}"

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.

models:
  pre-hook: "{{ custom_log_model_start_event() }}"
  post-hook: ["{{ custom_log_model_end_event() }}"]
  rsi_wfa_dbt:
      # Applies to all files under models/example/
      core:
          materialized: table
          schema: CORE
          +transient: false
          +sql_header: "ALTER SESSION SET TIMESTAMP_OUTPUT_FORMAT = 'YYYY-MM-DD HH24:MI:SS.FF3'; ALTER SESSION SET ERROR_ON_NONDETERMINISTIC_MERGE=false;"
          +post-hook: "{{ dbt_snow_mask.apply_masking_policy('models') }}"


      # ods:
      #     materialized: incremental
      #     schema: ODS
      #     +transient: false
      #     +sql_header: "ALTER SESSION SET TIMESTAMP_OUTPUT_FORMAT = 'YYYY-MM-DD HH24:MI:SS.FF3';"
      #     +post-hook: "{{ write_to_audit(this) }}"

      staging:
          materialized: incremental
          schema: STAGING

vars:
  use_common_masking_policy_schema_only: "True"
  common_masking_policy_schema: "STAGING"
  custom_materializations_map: '{ "scd_incremental": "table" }'
