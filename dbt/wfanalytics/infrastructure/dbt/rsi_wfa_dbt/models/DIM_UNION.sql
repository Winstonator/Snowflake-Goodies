{{
    config(
        materialized='incremental',
        unique_key ='UNION_SK'
        )
}}

WITH
STG_UNION AS (
    SELECT * , 'WKD' AS REC_SRC
    FROM {{ source('STAGING','STG_WKD_UNION') }}

    {% if is_incremental() %}
     WHERE 
     RPT_EFFECTIVE_DT > ( select max(RPT_EFF_DT) from {{this}}  )
    {% endif %}
    
),
INS_BATCH_ID AS (
    SELECT TO_NUMBER(TO_VARCHAR(CURRENT_TIMESTAMP, 'YYYYMMDDHH24MISS')) AS INS_BATCH_ID, 1 AS BATCH_KEY_ID
),

WKD_UNION AS(
    SELECT 1 AS BATCH_KEY_ID,
    UNION_ID AS UNION_ID,
    UNION_WID AS UNION_WID,
    UNION_NAME AS UNION_NAME,
    UNION_INACTIVE AS UNION_INACTIVE,
    RPT_EFFECTIVE_DT AS RPT_EFF_DT,
    REC_SRC AS REC_SRC,
    ROW_NUMBER() OVER(PARTITION BY UNION_ID ORDER BY RPT_EFFECTIVE_DT DESC) RN,
    TO_NUMBER(to_varchar(CURRENT_TIMESTAMP, 'YYYYMMDDHH24MISS')) AS UPD_BATCH_ID
FROM STG_UNION
)

SELECT
    {{ dbt_utils.surrogate_key(['UNION_ID']) }} AS UNION_SK,
    UNION_ID,
    UNION_WID,
    UNION_NAME,
    UNION_INACTIVE,
    RPT_EFF_DT,
    REC_SRC,
    INS_BATCH_ID as INS_BATCH_ID,
    UPD_BATCH_ID
FROM WKD_UNION
LEFT JOIN INS_BATCH_ID USING (BATCH_KEY_ID)
WHERE RN=1