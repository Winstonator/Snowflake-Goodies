WITH POSITION AS (
    SELECT
    IFF(POSITION_ID_CREATED IS NULL, regexp_substr(POSITION_ID,'P_[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]'), POSITION_ID_CREATED ) AS POSITION_ID_DERIVED,
    JOB_DESCRIPTION_PROPOSED AS JOB_DESC,
    BP_EVENT_COMPLETED_DT AS BP_EVENT_COMP_DT,
    ROW_NUMBER() OVER (PARTITION BY POSITION_ID_DERIVED, JOB_DESCRIPTION_PROPOSED ORDER BY BP_EVENT_COMPLETED_DT) AS RN 
    FROM {{ source('STAGING','STG_WKD_POSITION_EVENTS') }}
    QUALIFY RN =1 
),

VERSION AS (
    SELECT *, ROW_NUMBER() OVER (PARTITION BY POSITION_ID_DERIVED ORDER BY BP_EVENT_COMP_DT DESC) AS VERSION_NUMBER FROM POSITION
),


FINAL AS (
    SELECT V1.*, V1.BP_EVENT_COMP_DT AS EFF_DT, V2.BP_EVENT_COMP_DT -1  AS DISC_DT
    FROM VERSION V1 
    LEFT JOIN VERSION V2 ON V1.VERSION_NUMBER -1 =V2.VERSION_NUMBER AND V1.POSITION_ID_DERIVED = V2.POSITION_ID_DERIVED 
    ORDER BY V1.VERSION_NUMBER
)

SELECT 
    {{ dbt_utils.surrogate_key(['POSITION_ID_DERIVED','BP_EVENT_COMP_DT']) }} AS JOB_DESC_SK,
    POSITION_ID_DERIVED AS POSITION_ID,
    JOB_DESC,
    BP_EVENT_COMP_DT,
    'WKD' AS REC_SRC,
    EFF_DT, 
    COALESCE(DISC_DT, '9999-12-31') as DISC_DT,
    CASE WHEN DISC_DT IS NULL THEN TRUE ELSE FALSE END AS IS_CURRENT,         
    (SELECT TO_NUMBER(TO_VARCHAR(CURRENT_TIMESTAMP, 'YYYYMMDDHH24MISS'))) AS INS_BATCH_ID,
    TO_NUMBER(TO_VARCHAR(CURRENT_TIMESTAMP, 'YYYYMMDDHH24MISS')) AS UPD_BATCH_ID,
    {{ dbt_utils.surrogate_key(['POSITION_ID_DERIVED','JOB_DESC']) }} AS DBT_HASH
FROM FINAL