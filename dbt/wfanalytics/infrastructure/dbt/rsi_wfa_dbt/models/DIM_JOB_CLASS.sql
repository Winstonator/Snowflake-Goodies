{{
    config(
        materialized='table',
        unique_key ='JOB_CLASS_SK',
        full_refresh = true
        )
}}

WITH
STG_WKD_JOB_CODE AS (
    SELECT *, 'WKD' AS REC_SOURCE
    FROM {{ source('STAGING','STG_WKD_JOB_CODE') }}
)

SELECT
{{ dbt_utils.surrogate_key(['JOB_CODE','JOB_CLASSIFICATION_WID']) }} AS JOB_CLASS_SK,
JOB_CODE AS JOB_CD,
JOB_CLASSIFICATION_WID AS JOB_CLASS_WID,
JOB_CLASSIFICATION_GROUP_ID AS JOB_CLASS_GROUP_ID,
JOB_CLASSFICATION_VALUE_ID AS JOB_CLASS_VALUE_ID,
JOB_CLASSIFICATION AS JOB_CLASS,
JOB_CLASSIFICATION_LONG_NAME AS JOB_CLASS_LONG_NAME,
JOB_CLASSIFICATION_DESC AS JOB_CLASS_DESC,
JOB_CLASSIFICATION_GROUP AS JOB_CLASS_GROUP,
JOB_CLASSIFICATION_INACTIVE AS JOB_CLASS_INACTIVE,
JOB_CLASSIFICATION_VALUE AS JOB_CLASS_VALUE,
JOB_CLASSIFICATION_MAPPING AS JOB_CLASS_MAPPING,
TO_NUMBER(TO_VARCHAR(CURRENT_TIMESTAMP, 'YYYYMMDDHH24MISS')) as INS_BATCH_ID,
TO_NUMBER(to_varchar(CURRENT_TIMESTAMP, 'YYYYMMDDHH24MISS')) AS UPD_BATCH_ID,
REC_SOURCE AS REC_SRC
FROM STG_WKD_JOB_CODE
QUALIFY ROW_NUMBER() OVER(PARTITION BY JOB_CODE, JOB_CLASSIFICATION ORDER BY SF_INSERT_TIMESTAMP::DATE DESC) = 1
