{{
    config(
        materialized='incremental',
        unique_key ='SECURITY_GROUP_SK',
        tags=["core","dim","scheduled-daily"],
        post_hook='{{ update_dim_security_user_based_disappear() }}'
        )
}}

WITH RAWDATA AS (
    SELECT *
    FROM {{ source('STAGING','STG_WKD_SECURITY_USER_BASED') }} 
        {% if is_incremental() %}
        WHERE  
        RPT_EFFECTIVE_DT > ( SELECT MAX(RPT_EFF_DT) FROM {{this}}  )
        {% endif %}
),

REQDATA AS (
    SELECT * 
    FROM {{ source('STAGING','STG_WKD_SECURITY_USER_BASED') }}  
    WHERE SECURITY_GROUP_REFID IN (SELECT SECURITY_GROUP_REFID FROM RAWDATA )
    AND EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM RAWDATA )

),

SECURITY_USER AS (
    SELECT
    SECURITY_GROUP_REFID AS SECURITY_GROUP_ID,
    SECURITY_GROUP_WID AS SECURITY_GROUP_WID,
    EMPLOYEE_ID AS EMP_ID,
    SECURITY_GROUP AS SECURITY_GROUP,
    SECURITY_GROUP_TYPE AS SECURITY_GROUP_TYPE,
    RPT_EFFECTIVE_DT AS RPT_EFF_DT,
    ROW_NUMBER() OVER (PARTITION BY SECURITY_GROUP_REFID, EMPLOYEE_ID ORDER BY RPT_EFFECTIVE_DT) AS RN,
    ROW_NUMBER() OVER (PARTITION BY
        SECURITY_GROUP_REFID,
        SECURITY_GROUP_WID,
        EMPLOYEE_ID,
        SECURITY_GROUP,
        SECURITY_GROUP_TYPE
        ORDER BY RPT_EFFECTIVE_DT) AS RNO
FROM REQDATA
),

DE_DUP AS (
    SELECT *,
    ROW_NUMBER() OVER (PARTITION BY
        SECURITY_GROUP_ID,
        SECURITY_GROUP_WID,
        EMP_ID,
        SECURITY_GROUP,
        SECURITY_GROUP_TYPE,
        RN-RNO
        ORDER BY RPT_EFF_DT) AS NUM
    FROM SECURITY_USER
QUALIFY NUM=1
),

VERSION AS (
    SELECT *, ROW_NUMBER() OVER (PARTITION BY SECURITY_GROUP_ID, EMP_ID ORDER BY RPT_EFF_DT DESC) AS VERSION_NUMBER FROM DE_DUP 

),


FINAL AS (
    SELECT V1.*, V1.RPT_EFF_DT AS EFF_DT, V2.RPT_EFF_DT -1  AS DISC_DT
    FROM VERSION V1 
    LEFT JOIN VERSION V2 
    ON V1.VERSION_NUMBER -1 =V2.VERSION_NUMBER 
    AND V1.SECURITY_GROUP_ID = V2.SECURITY_GROUP_ID 
    AND V1.EMP_ID = V2.EMP_ID
    ORDER BY V1.VERSION_NUMBER
)

SELECT 
    {{ dbt_utils.surrogate_key(['SECURITY_GROUP_ID','EMP_ID','RPT_EFF_DT']) }} AS SECURITY_GROUP_SK,
    SECURITY_GROUP_ID,
    SECURITY_GROUP_WID,
    EMP_ID,
    SECURITY_GROUP,
    SECURITY_GROUP_TYPE,
    RPT_EFF_DT,
    'WKD' AS REC_SRC,
    EFF_DT, 
    COALESCE(DISC_DT, '9999-12-31') as DISC_DT,
    CASE WHEN DISC_DT IS NULL THEN TRUE ELSE FALSE END AS IS_CURRENT,         
    (SELECT TO_NUMBER(TO_VARCHAR(CURRENT_TIMESTAMP, 'YYYYMMDDHH24MISS'))) AS INS_BATCH_ID,
    TO_NUMBER(TO_VARCHAR(CURRENT_TIMESTAMP, 'YYYYMMDDHH24MISS')) AS UPD_BATCH_ID,
    {{ dbt_utils.surrogate_key(['SECURITY_GROUP_WID','SECURITY_GROUP','SECURITY_GROUP_TYPE']) }} AS DBT_HASH
FROM FINAL
