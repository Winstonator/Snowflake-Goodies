WITH 
SRC AS
(SELECT *,CASE WHEN EMP_ID = MGR_ID THEN '' ELSE MGR_ID END AS MANAGER_NEW FROM {{ source('CORE','DIM_POSITION') }}  WHERE EMP_ID<>'' ORDER BY POSITION_ID,1),

EMP AS
(SELECT SYS_CONNECT_BY_PATH(EMP_ID, ',') HIER,POSITION_ID, EFF_DT,DISC_DT
 FROM SRC --WHERE EMP_ID IN ('551093291')
 START WITH EMP_ID IN( '719051583' ,'551092152')
 CONNECT BY
 MANAGER_NEW = PRIOR EMP_ID
 AND EFF_DT BETWEEN PRIOR EFF_DT AND PRIOR DISC_DT),
 
SUP_HIER AS
(SELECT POSITION_ID, C.VALUE::STRING AS MANAGER_HIER,ROW_NUMBER() OVER(PARTITION BY POSITION_ID,EFF_DT ORDER BY POSITION_ID,EFF_DT) -1 AS LEVEL, EFF_DT, DISC_DT
FROM EMP,
LATERAL FLATTEN(INPUT=>SPLIT(HIER, ',')) C),

SUP_HIER_DT AS
(SELECT * FROM SUP_HIER WHERE LEVEL>0),

RAWDATA AS 
(SELECT MD5(CAST(COALESCE(CAST(POSITION_ID AS VARCHAR), '') || '-' || COALESCE(CAST(LEVEL AS VARCHAR), '') || '-' || COALESCE(CAST(MIN(EFF_DT) AS VARCHAR ), '') AS VARCHAR)) AS MANAGER_SK,
POSITION_ID, 
MANAGER_HIER, 
LEVEL,
MIN(EFF_DT) AS EFF_DT
FROM SUP_HIER_DT 
GROUP BY POSITION_ID,MANAGER_HIER,LEVEL),

FINAL AS (SELECT D1.*, 
LEAD(D2.EFF_DT) OVER (PARTITION BY D2.POSITION_ID,D2.LEVEL ORDER BY D2.EFF_DT) AS DISC_DT_CALC,
DATEADD(D,-1,DISC_DT_CALC) AS DISC_DT
FROM RAWDATA D1
LEFT JOIN RAWDATA D2
ON D1.MANAGER_SK=D2.MANAGER_SK)

SELECT 
    MANAGER_SK,
    POSITION_ID,
    MANAGER_HIER,
    LEVEL,
    'WKD' AS REC_SRC,
    EFF_DT, 
    COALESCE(DISC_DT, '9999-12-31') AS DISC_DT, 
    CASE WHEN DISC_DT IS NULL THEN TRUE ELSE FALSE END AS IS_CURRENT,         
    (SELECT TO_NUMBER(TO_VARCHAR(CURRENT_TIMESTAMP, 'YYYYMMDDHH24MISS'))) AS INS_BATCH_ID,
    TO_NUMBER(TO_VARCHAR(CURRENT_TIMESTAMP, 'YYYYMMDDHH24MISS')) AS UPD_BATCH_ID
FROM FINAL





