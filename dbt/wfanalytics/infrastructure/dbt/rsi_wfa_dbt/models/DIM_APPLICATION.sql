{{
    config(
        materialized='incremental',
        unique_key ='CAND_APP_SK',
        full_refresh = false
    )
}}

WITH
STG_JOB_APP AS ( 
    select stg.* 
    , 'WKD' AS REC_SOURCE
    , GREATEST( nvl(stg.LAST_JOB_APPLICATION_UPDATE_DT, '1900-01-01')
              , nvl(stg.JOB_APPLIED_DT, '1900-01-01')
              ) AS PAR_COLUMN
    {% if is_incremental() %}
    , dim.cand_app_sk
    , dim.last_job_app_upd_dt
    , dim.job_app_dt
    {% endif %}
    from {{ source('STAGING','STG_WKD_JOB_APPLICATION') }} stg
    {% if is_incremental() %}
    left join {{this}} dim on dim.cand_app_sk = {{ dbt_utils.surrogate_key(['JOB_APPLICATION_ID', 'CANDIDATE_ID']) }}
    {% endif %}
    WHERE 1=1
    {% if is_incremental() %}
    and 
    (  nvl(LAST_JOB_APPLICATION_UPDATE_DT, '1900-01-01') > nvl(dim.LAST_JOB_APP_UPD_DT, '1900-01-01')
    OR nvl(JOB_APPLIED_DT, '1900-01-01') > nvl(dim.JOB_APP_DT, '1900-01-01')
    )
    {% endif %}
    QUALIFY ROW_NUMBER() OVER(PARTITION BY JOB_APPLICATION_ID, CANDIDATE_ID  ORDER BY PAR_COLUMN desc) = 1
)

SELECT {{ dbt_utils.surrogate_key(['JOB_APPLICATION_ID', 'CANDIDATE_ID']) }} AS CAND_APP_SK,
JOB_APPLICATION_ID AS JOB_APP_ID,
MASKED_JOB_APPLICATION_ID AS MASKED_JOB_APP_ID,
CANDIDATE_ID AS CAND_ID,
JOB_REQ_ID AS JOB_REQ_ID,
JOB_APP_LOCATION_ID AS JOB_APP_LOCATION_ID,
JOB_APP_WID AS JOB_APP_WID,
OVERALL_BP_WID AS OVERALL_BP_WID,
RECRUITER_EIN AS RECRUITER_EMP_ID,
JOB_APPLICATION_SENS AS JOB_APP_SENS,
JOB_APP_TEMPLATE AS JOB_APP_TEMPLATE,
JOB_FILLED_FROZEN_CLOSED_IND_SENS AS JOB_FILLED_FROZEN_CLOSED_IND_SENS,
JOB_APP_DISPOSITION_REASON_SENS AS JOB_APP_DISPOSITION_REASON_SENS,
CANDIDATE_DISPOSITION_REASON_SENS AS CAND_DISPOSITION_REASON_SENS,
CANDIDATE_DISPOSITION_STAGE_SENS AS CAND_DISPOSITION_STAGE_SENS,
CANDIDATE_STAGE AS CAND_STAGE,
JOB_REQ_SOURCE_CATEGORY AS JOB_REQ_SRC_CATEGORY,
JOB_REQ_SOURCE AS JOB_REQ_SRC,
JOB_APPLIED_DT AS JOB_APP_DT,
LAST_JOB_APPLICATION_UPDATE_DT AS LAST_JOB_APP_UPD_DT,
CANDIDATE_INFO_LAST_UPDATE_DT AS CAND_INFO_LAST_UPD_DT,
CANDIDATE_INFO_LAST_UPDATE_BY AS CAND_INFO_LAST_UPD_BY,
OVERALL_BP AS OVERALL_BP,
OVERALL_BP_INITIATED_DTM AS OVERALL_BP_INITIATED_DTM,
OVERALL_BP_COMPLETED_DTM AS OVERALL_BP_COMPLETED_DTM,
OVERALL_BP_COMPLETED_DT AS OVERALL_BP_COMPLETED_DT,
TRANSACTION_STATUS AS TRANSACTION_STATUS,
REC_SOURCE AS REC_SRC,
TO_NUMBER(TO_VARCHAR(CURRENT_TIMESTAMP, 'YYYYMMDDHH24MISS')) AS INS_BATCH_ID,
TO_NUMBER(to_varchar(CURRENT_TIMESTAMP, 'YYYYMMDDHH24MISS')) AS UPD_BATCH_ID
FROM STG_JOB_APP
