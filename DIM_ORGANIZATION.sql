{{
    config(
        materialized='scd_incremental',
        unique_key ='ORG_PK',
        incremental_strategy='scd+merge',
        pre_hook='{{ load_dim_organization_hist() }}',
        timestamp_column='INS_BATCH_ID'
    )
}}

{% do log("Running the model now", info=True) %} 

WITH

FEIN AS (
    SELECT FEIN
            , COMPANY_NAME
            , TRIM(SUBSTRING(COST_CENTER,1,4)) as FEIN_DIV_NBR
    from {{ source('STAGING','STG_WKD_COMPANY') }}
    where upper(cc_code) not like 'CC_UPDATE%'
    qualify row_number() over(partition by TRIM(SUBSTRING(COST_CENTER,1,4)) order by rpt_run_dtm desc) = 1
),

STG_WKD_COMPANY AS (
    select TRIM(SUBSTRING(COST_CENTER,1,4)) as COM_DIV_NBR
    , CASE WHEN TRIM(SUBSTRING(COST_CENTER,8,4)) < '1000' THEN '0000'
        WHEN TRIM(SUBSTRING(COST_CENTER,8,4)) = 'ARCH' THEN '0000'
        ELSE TRIM(SUBSTRING(COST_CENTER,8,4)) END as COM_LOCAL_USE
    , TRIM(SUBSTRING(COST_CENTER,15,4)) as COM_DEPARTMENT_NBR
    , CASE WHEN TRIM(SUBSTRING(COST_CENTER,8,4)) < '1000' THEN 
        CONCAT (SUBSTR(CC_CODE,1,7), '0000', SUBSTR(CC_CODE,12,1000))
        WHEN TRIM(SUBSTRING(COST_CENTER,8,4)) = 'ARCH' THEN 
        CONCAT (SUBSTR(CC_CODE,1,7), '0000', SUBSTR(CC_CODE,12,1000))
        ELSE CC_CODE END as CC_CODE_CORRECTED -- CC_CODE
    , CASE WHEN TRIM(SUBSTRING(COST_CENTER,8,4)) < '1000' THEN
        CONCAT (SUBSTR(COST_CENTER,1,7), '0000', SUBSTR(COST_CENTER,12,1000))
        WHEN TRIM(SUBSTRING(COST_CENTER,8,4)) = 'ARCH' THEN
        CONCAT (SUBSTR(COST_CENTER,1,7), '0000', SUBSTR(COST_CENTER,12,1000))
        ELSE COST_CENTER END as COM_COST_CENTER_DESC_CORRECTED -- COST_CENTER as COM_COST_CENTER_DESC,
    , CASE WHEN TRIM(SUBSTRING(COST_CENTER,8,4)) < '1000' THEN
        CONCAT (SUBSTR(COST_CENTER,1,7), '0000 -', SUBSTR(COST_CENTER,14,4))
        WHEN TRIM(SUBSTRING(COST_CENTER,8,4)) = 'ARCH' THEN 
        CONCAT (SUBSTR(COST_CENTER,1,7), '0000 -', SUBSTR(COST_CENTER,14,4))
        ELSE SUBSTRING(COST_CENTER,1,17)  END as COM_COST_CENTER_ID_CORRECTED
    --  SUBSTRING(COST_CENTER,1,17) as COM_COST_CENTER_ID, 
    , 'WKD' AS REC_SOURCE
    from STAGING.STG_WKD_COMPANY
    where upper(cc_code) not like 'CC_UPDATE%'
    qualify row_number() over(partition by CC_CODE_CORRECTED order by rpt_run_dtm desc) = 1
),

DIM_CORP_HIER AS (
    select NVL(DCH.local_use,'0000') as LCL_USE
    , {{ dbt_utils.surrogate_key(['DIV_NBR','LCL_USE','SUB_LOB'])}} as DCH_HASH_KEY
    , REGION_NBR as DCH_REGION_NBR
    , REGION_NM as DCH_REGION_NM
    , AREA_NBR as DCH_AREA_NBR
    , AREA_NM as DCH_AREA_NM
    , BU_NBR as DCH_BU_NBR
    , BU_DESC as DCH_BU_DESC
    , DIV_NBR as DCH_DIV_NBR
    , DIV_NM as DCH_DIV_NM
    , LOB_CATEGORY as DCH_LOB_CATEGORY
    , LOB as DCH_LOB
    , LOB_DESC as DCH_LOB_DESC
    , SUB_LOB as DCH_DEPARTMENT_NBR
    , SUB_LOB_DESC as DCH_DEPARTMENT_DESC
    , LOCAL_USE as DCH_LOCAL_USE
    , LOCAL_DESC as DCH_LOCAL_DESC
    , CUR_REGION_NBR as DCH_CUR_REGION_NBR
    , CUR_REGION_NM as DCH_CUR_REGION_NM
    , CUR_AREA_NBR as DCH_CUR_AREA_NBR
    , CUR_AREA_NM as DCH_CUR_AREA_NM
    , CUR_BU_NBR as DCH_CUR_BU_NBR
    , CUR_BU_DESC as DCH_CUR_BU_DESC
    , CUR_DIV_NBR as DCH_CUR_DIV_NBR
    , CUR_DIV_NM as DCH_CUR_DIV_NM
    , CUR_SUB_LOB_DESC as DCH_CUR_SUB_LOB_DESC
    , CUR_SUB_LOB as DCH_CUR_SUB_LOB
    , CUR_LOB as DCH_CUR_LOB
    , CUR_LOB_DESC as DCH_CUR_LOB_DESC
    , CUR_LOB_CATEGORY as DCH_CUR_LOB_CATEGORY
    , SOURCE_SYSTEM as DCH_SOURCE_SYSTEM
    , (CASE WHEN DISC_DT IS NULL THEN '1950-01-01' ELSE EFF_DT END)::DATE as DCH_EFF_DT
    , (COALESCE(DECODE(DISC_DT::DATE,'1816-03-29',NULL,DISC_DT), '9999-12-31'))::DATE as DCH_DISC_DT
    , IS_CURRENT as DCH_IS_CURRENT
    from {{ source('EDW_CORE','DIM_CORP_HIER') }} DCH
    where is_current = true and source_system = 'OFC'
    qualify ROW_NUMBER()
        OVER(PARTITION BY REGION_NBR, AREA_NBR, BU_NBR, DIV_NBR, LOCAL_USE, SUB_LOB
            ORDER BY DCH_EFF_DT) = 1
),

DIM_ORGANIZATION AS (
    select
    {{ dbt_utils.surrogate_key(['DIVISION_CD','LOCAL_USE_CD','DEPARTMENT_CD'])}} as DO_HASH_KEY
    , *
    from {{ this }}
),

ORGANIZATION AS (
-- SELECT * FROM DIM_ORG_HIST
-- UNION ALL
SELECT
    null as ORG_SK,
    null as DBT_HASH,
    COM.CC_CODE_CORRECTED as COST_CENTER_CD,
    COM.COM_COST_CENTER_DESC_CORRECTED as COST_CENTER_DESC,
    COM.COM_COST_CENTER_ID_CORRECTED as COST_CENTER_ID,
    coalesce(nullif(trim(FEIN.FEIN),''), DO.LEGAL_ENTITY_CD) as LEGAL_ENTITY_CD,
    coalesce(nullif(trim(FEIN.COMPANY_NAME),''), DO.LEGAL_ENTITY_DESC) as LEGAL_ENTITY_DESC,
    coalesce(nullif(trim(DCH.DCH_REGION_NBR),''), DO.REGION_CD) as REGION_CD,
    coalesce(nullif(trim(DCH.DCH_REGION_NM),''), DO.REGION_DESC) as REGION_DESC,
    coalesce(nullif(trim(DCH.DCH_AREA_NBR),''), DO.AREA_CD) as AREA_CD,
    coalesce(nullif(trim(DCH.DCH_AREA_NM),''), DO.AREA_DESC) as AREA_DESC,
    coalesce(nullif(trim(DCH.DCH_BU_NBR),''), DO.BUSINESS_UNIT_CD) as BUSINESS_UNIT_CD,
    coalesce(nullif(trim(DCH.DCH_BU_DESC),''), DO.BUSINESS_UNIT_DESC) as BUSINESS_UNIT_DESC,
    coalesce(nullif(trim(DCH.DCH_DIV_NBR),''), DO.DIVISION_CD) as DIVISION_CD,
    coalesce(nullif(trim(DCH.DCH_DIV_NM),''), DO.DIVISION_DESC) as DIVISION_DESC,
    coalesce(nullif(trim(DCH.DCH_LOB_CATEGORY),''), DO.LOB_CATEGORY) as LOB_CATEGORY,
    coalesce(nullif(trim(DCH.DCH_LOB),''), DO.LOB_CD) as LOB_CD,
    coalesce(nullif(trim(DCH.DCH_LOB_DESC),''), DO.LOB_DESC) as LOB_DESC,
    coalesce(nullif(trim(DCH.DCH_DEPARTMENT_NBR),''), DO.DEPARTMENT_CD) as DEPARTMENT_CD,
    coalesce(nullif(trim(DCH.DCH_DEPARTMENT_DESC),''), DO.DEPARTMENT_DESC) as DEPARTMENT_DESC,
    coalesce(nullif(trim(DCH.DCH_LOCAL_USE),''), DO.LOCAL_USE_CD, '0000') as LOCAL_USE_CD,
    coalesce(nullif(trim(DCH.DCH_LOCAL_DESC),''), DO.LOCAL_USE_DESC) as LOCAL_USE_DESC,
    coalesce(nullif(trim(DCH.DCH_CUR_REGION_NBR),''), DO.CURR_REGION_CD) as CURR_REGION_CD,
    coalesce(nullif(trim(DCH.DCH_CUR_REGION_NM),''), DO.CURR_REGION_DESC) as CURR_REGION_DESC,
    coalesce(nullif(trim(DCH.DCH_CUR_AREA_NBR),''), DO.CURR_AREA_CD) as CURR_AREA_CD,
    coalesce(nullif(trim(DCH.DCH_CUR_AREA_NM),''), DO.CURR_AREA_DESC) as CURR_AREA_DESC,
    coalesce(nullif(trim(DCH.DCH_CUR_BU_NBR),''), DO.CURR_BUSINESS_UNIT_CD) as CURR_BUSINESS_UNIT_CD,
    coalesce(nullif(trim(DCH.DCH_CUR_BU_DESC),''), DO.CURR_BUSINESS_UNIT_DESC) as CURR_BUSINESS_UNIT_DESC,
    coalesce(nullif(trim(DCH.DCH_CUR_DIV_NBR),''), DO.CURR_DIVISION_CD) as CURR_DIVISION_CD,
    coalesce(nullif(trim(DCH.DCH_CUR_DIV_NM),''), DO.CURR_DIVISION_DESC) as CURR_DIVISION_DESC,
    coalesce(nullif(trim(DCH.DCH_CUR_SUB_LOB_DESC),''), DO.CURR_DEPARTMENT_DESC) as CURR_DEPARTMENT_DESC,
    coalesce(nullif(trim(DCH.DCH_CUR_SUB_LOB),''), DO.CURR_DEPARTMENT_CD) as CURR_DEPARTMENT_CD,
    coalesce(nullif(trim(FEIN.FEIN),''), DO.CURR_LEGAL_ENTITY_CD) as CURR_LEGAL_ENTITY_CD,
    coalesce(nullif(trim(FEIN.COMPANY_NAME),''), DO.CURR_LEGAL_ENTITY_DESC) as CURR_LEGAL_ENTITY_DESC,
    coalesce(nullif(trim(DCH.DCH_CUR_LOB),''), DO.CURR_LOB_CD) as CURR_LOB_CD,
    coalesce(nullif(trim(DCH.DCH_CUR_LOB_DESC),''), DO.CURR_LOB_DESC) as CURR_LOB_DESC,
    coalesce(nullif(trim(COM.CC_CODE_CORRECTED),''), DO.CURR_COST_CENTER_CD) as CURR_COST_CENTER_CD,
    coalesce(nullif(trim(COM.COM_COST_CENTER_DESC_CORRECTED),''), DO.CURR_COST_CENTER_DESC) as CURR_COST_CENTER_DESC,
    coalesce(nullif(trim(COM.COM_COST_CENTER_ID_CORRECTED),''), DO.CURR_COST_CENTER_ID) as CURR_COST_CENTER_ID,
    coalesce(nullif(trim(DCH.DCH_CUR_LOB_CATEGORY),''), DO.CURR_LOB_CATEGORY) as CURR_LOB_CATEGORY,
    coalesce(nullif(trim(DCH.DCH_LOCAL_USE),''), DO.CURR_LOCAL_USE_CD) as CURR_LOCAL_USE_CD,
    coalesce(nullif(trim(DCH.DCH_LOCAL_DESC),''), DO.CURR_LOCAL_USE_DESC) as CURR_LOCAL_USE_DESC,
    DCH.DCH_SOURCE_SYSTEM as REC_SRC,
    CURRENT_TIMESTAMP as CREATED_DTM,
    case when date(DCH.DCH_EFF_DT) = '1900-01-01' then current_date() else DCH.DCH_EFF_DT end as EFF_DT,
    DCH.DCH_DISC_DT as DISC_DT,
    DCH.DCH_IS_CURRENT::BOOLEAN as IS_CURRENT,
    TO_NUMBER(TO_VARCHAR(CURRENT_TIMESTAMP, 'YYYYMMDDHH24MISS')) AS INS_BATCH_ID,
    TO_NUMBER(TO_VARCHAR(CURRENT_TIMESTAMP, 'YYYYMMDDHH24MISS')) AS UPD_BATCH_ID
FROM DIM_CORP_HIER DCH
LEFT JOIN DIM_ORGANIZATION DO on DO.DO_HASH_KEY = DCH.DCH_HASH_KEY
    AND DO.IS_CURRENT = TRUE
LEFT JOIN STG_WKD_COMPANY COM ON COM.COM_DIV_NBR = DCH.DCH_DIV_NBR
    AND COM.COM_LOCAL_USE = NVL(DCH.DCH_LOCAL_USE,'0000')
    AND COM.COM_DEPARTMENT_NBR = DCH.DCH_DEPARTMENT_NBR
LEFT JOIN FEIN on FEIN.FEIN_DIV_NBR = DCH.DCH_DIV_NBR
),

CAST_VAR AS (
SELECT
    ORG_SK,
    DBT_HASH,
    cast(COST_CENTER_CD as varchar) as COST_CENTER_CD,
    cast(COST_CENTER_DESC as varchar) as COST_CENTER_DESC,
    cast(COST_CENTER_ID as varchar) as COST_CENTER_ID,
    LEGAL_ENTITY_CD,
    LEGAL_ENTITY_DESC,
    REGION_CD,
    REGION_DESC,
    AREA_CD,
    AREA_DESC,
    BUSINESS_UNIT_CD,
    BUSINESS_UNIT_DESC,
    CAST(CAST(DIVISION_CD as int) as VARCHAR) as DIVISION_CD,
    DIVISION_DESC,
    cast(LOB_CATEGORY as varchar) as LOB_CATEGORY,
    LOB_CD,
    LOB_DESC,
    CAST(CAST(DEPARTMENT_CD as int) as VARCHAR) as DEPARTMENT_CD,
    DEPARTMENT_DESC,
    cast(LOCAL_USE_CD as varchar) as LOCAL_USE_CD,
    cast(LOCAL_USE_DESC as varchar) as LOCAL_USE_DESC,
    CURR_REGION_CD,
    CURR_REGION_DESC,
    CURR_AREA_CD,
    CURR_AREA_DESC,
    CURR_BUSINESS_UNIT_CD,
    CURR_BUSINESS_UNIT_DESC,
    CAST(CAST(CURR_DIVISION_CD as int) as VARCHAR) as CURR_DIVISION_CD,
    CURR_DIVISION_DESC,
    CURR_DEPARTMENT_DESC,
    CAST(CAST(CURR_DEPARTMENT_CD as int) as VARCHAR) as CURR_DEPARTMENT_CD,
    CURR_LEGAL_ENTITY_CD,
    CURR_LEGAL_ENTITY_DESC,
    CURR_LOB_CD,
    CURR_LOB_DESC,
    cast(CURR_COST_CENTER_CD as varchar) as CURR_COST_CENTER_CD,
    cast(CURR_COST_CENTER_DESC as varchar) as CURR_COST_CENTER_DESC,
    cast(CURR_COST_CENTER_ID as varchar) as CURR_COST_CENTER_ID,
    cast(CURR_LOB_CATEGORY as varchar) as CURR_LOB_CATEGORY,
    cast(CURR_LOCAL_USE_CD as varchar) as CURR_LOCAL_USE_CD,
    cast(CURR_LOCAL_USE_DESC as varchar) as CURR_LOCAL_USE_DESC,
    REC_SRC,
    CREATED_DTM,
    EFF_DT,
    DISC_DT,
    IS_CURRENT,
    INS_BATCH_ID,
    UPD_BATCH_ID
FROM ORGANIZATION
),

HASH_FINAL AS (
SELECT
{{ dbt_utils.surrogate_key(['DIVISION_CD','LOCAL_USE_CD','DEPARTMENT_CD','EFF_DT'])}} as ORG_SK,
{{ dbt_utils.surrogate_key(['DIVISION_CD','LOCAL_USE_CD','DEPARTMENT_CD'])}} as ORG_PK,
{{ dbt_utils.surrogate_key([
    'COST_CENTER_CD'
    ,'COST_CENTER_DESC'
    ,'COST_CENTER_ID'
    ,'LEGAL_ENTITY_CD'
    ,'LEGAL_ENTITY_DESC'
    ,'REGION_CD'
    ,'REGION_DESC'
    ,'AREA_CD'
    ,'AREA_DESC'
    ,'BUSINESS_UNIT_CD'
    ,'BUSINESS_UNIT_DESC'
    ,'DIVISION_CD'
    ,'DIVISION_DESC'
    ,'LOB_CATEGORY'
    ,'LOB_CD'
    ,'LOB_DESC'
    ,'DEPARTMENT_CD'
    ,'DEPARTMENT_DESC'
    ,'LOCAL_USE_CD'
    ,'LOCAL_USE_DESC'
    ,'CURR_REGION_CD'
    ,'CURR_REGION_DESC'
    ,'CURR_AREA_CD'
    ,'CURR_AREA_DESC'
    ,'CURR_BUSINESS_UNIT_CD'
    ,'CURR_BUSINESS_UNIT_DESC'
    ,'CURR_DIVISION_CD'
    ,'CURR_DIVISION_DESC'
    ,'CURR_DEPARTMENT_DESC'
    ,'CURR_DEPARTMENT_CD'
    ,'CURR_LEGAL_ENTITY_CD'
    ,'CURR_LEGAL_ENTITY_DESC'
    ,'CURR_LOB_CD'
    ,'CURR_LOB_DESC'
    ,'CURR_COST_CENTER_CD'
    ,'CURR_COST_CENTER_DESC'
    ,'CURR_COST_CENTER_ID'
    ,'CURR_LOB_CATEGORY'
    ,'CURR_LOCAL_USE_CD'
    ,'CURR_LOCAL_USE_DESC'
    ]) }} AS DBT_HASH,
COST_CENTER_CD,
COST_CENTER_DESC,
COST_CENTER_ID,
LEGAL_ENTITY_CD,
LEGAL_ENTITY_DESC,
REGION_CD,
REGION_DESC,
AREA_CD,
AREA_DESC,
BUSINESS_UNIT_CD,
BUSINESS_UNIT_DESC,
DIVISION_CD,
DIVISION_DESC,
LOB_CATEGORY,
LOB_CD,
LOB_DESC,
DEPARTMENT_CD,
DEPARTMENT_DESC,
LOCAL_USE_CD,
LOCAL_USE_DESC,
CURR_REGION_CD,
CURR_REGION_DESC,
CURR_AREA_CD,
CURR_AREA_DESC,
CURR_BUSINESS_UNIT_CD,
CURR_BUSINESS_UNIT_DESC,
CURR_DIVISION_CD,
CURR_DIVISION_DESC,
CURR_DEPARTMENT_DESC,
CURR_DEPARTMENT_CD,
CURR_LEGAL_ENTITY_CD,
CURR_LEGAL_ENTITY_DESC,
CURR_LOB_CD,
CURR_LOB_DESC,
CURR_COST_CENTER_CD,
CURR_COST_CENTER_DESC,
CURR_COST_CENTER_ID,
CURR_LOB_CATEGORY,
CURR_LOCAL_USE_CD,
CURR_LOCAL_USE_DESC,
REC_SRC,
CREATED_DTM,
EFF_DT,
DISC_DT,
IS_CURRENT,
INS_BATCH_ID,
UPD_BATCH_ID
FROM CAST_VAR
),

DEDUP_HASH AS (
SELECT
h.ORG_SK,
h.ORG_PK,
h.DBT_HASH,
h.COST_CENTER_CD,
h.COST_CENTER_DESC,
h.COST_CENTER_ID,
h.LEGAL_ENTITY_CD,
h.LEGAL_ENTITY_DESC,
h.REGION_CD,
h.REGION_DESC,
h.AREA_CD,
h.AREA_DESC,
h.BUSINESS_UNIT_CD,
h.BUSINESS_UNIT_DESC,
h.DIVISION_CD,
h.DIVISION_DESC,
h.LOB_CATEGORY,
h.LOB_CD,
h.LOB_DESC,
h.DEPARTMENT_CD,
h.DEPARTMENT_DESC,
h.LOCAL_USE_CD,
h.LOCAL_USE_DESC,
h.CURR_REGION_CD,
h.CURR_REGION_DESC,
h.CURR_AREA_CD,
h.CURR_AREA_DESC,
h.CURR_BUSINESS_UNIT_CD,
h.CURR_BUSINESS_UNIT_DESC,
h.CURR_DIVISION_CD,
h.CURR_DIVISION_DESC,
h.CURR_DEPARTMENT_DESC,
h.CURR_DEPARTMENT_CD,
h.CURR_LEGAL_ENTITY_CD,
h.CURR_LEGAL_ENTITY_DESC,
h.CURR_LOB_CD,
h.CURR_LOB_DESC,
h.CURR_COST_CENTER_CD,
h.CURR_COST_CENTER_DESC,
h.CURR_COST_CENTER_ID,
h.CURR_LOB_CATEGORY,
h.CURR_LOCAL_USE_CD,
h.CURR_LOCAL_USE_DESC,
h.REC_SRC,
h.CREATED_DTM,
h.EFF_DT,
h.DISC_DT,
h.IS_CURRENT,
h.INS_BATCH_ID,
h.UPD_BATCH_ID,
ROW_NUMBER() OVER (PARTITION BY h.DBT_HASH ORDER BY h.EFF_DT DESC ) AS RN
FROM HASH_FINAL h
LEFT JOIN DIM_ORGANIZATION o on o.dbt_hash = h.dbt_hash
WHERE o.dbt_hash is null
),

DISC_CTE AS
(
SELECT
ORG_SK,
ORG_PK,
DBT_HASH,
COST_CENTER_CD,
COST_CENTER_DESC,
COST_CENTER_ID,
LEGAL_ENTITY_CD,
LEGAL_ENTITY_DESC,
REGION_CD,
REGION_DESC,
AREA_CD,
AREA_DESC,
BUSINESS_UNIT_CD,
BUSINESS_UNIT_DESC,
DIVISION_CD,
DIVISION_DESC,
LOB_CATEGORY,
LOB_CD,
LOB_DESC,
DEPARTMENT_CD,
DEPARTMENT_DESC,
LOCAL_USE_CD,
LOCAL_USE_DESC,
CURR_REGION_CD,
CURR_REGION_DESC,
CURR_AREA_CD,
CURR_AREA_DESC,
CURR_BUSINESS_UNIT_CD,
CURR_BUSINESS_UNIT_DESC,
CURR_DIVISION_CD,
CURR_DIVISION_DESC,
CURR_DEPARTMENT_DESC,
CURR_DEPARTMENT_CD,
CURR_LEGAL_ENTITY_CD,
CURR_LEGAL_ENTITY_DESC,
CURR_LOB_CD,
CURR_LOB_DESC,
CURR_COST_CENTER_CD,
CURR_COST_CENTER_DESC,
CURR_COST_CENTER_ID,
CURR_LOB_CATEGORY,
CURR_LOCAL_USE_CD,
CURR_LOCAL_USE_DESC,
REC_SRC,
CREATED_DTM,
EFF_DT,
DISC_DT,
IS_CURRENT,
INS_BATCH_ID,
UPD_BATCH_ID
FROM DEDUP_HASH
WHERE RN = 1
),

DIM_ORG_2 AS
(
SELECT ORG_SK,
ORG_PK,
DBT_HASH,
COST_CENTER_CD,
COST_CENTER_DESC,
COST_CENTER_ID,
LEGAL_ENTITY_CD,
LEGAL_ENTITY_DESC,
REGION_CD,
REGION_DESC,
AREA_CD,
AREA_DESC,
BUSINESS_UNIT_CD,
BUSINESS_UNIT_DESC,
DIVISION_CD,
DIVISION_DESC,
LOB_CATEGORY,
LOB_CD,
LOB_DESC,
DEPARTMENT_CD,
DEPARTMENT_DESC,
LOCAL_USE_CD,
LOCAL_USE_DESC,
CURR_REGION_CD,
CURR_REGION_DESC,
CURR_AREA_CD,
CURR_AREA_DESC,
CURR_BUSINESS_UNIT_CD,
CURR_BUSINESS_UNIT_DESC,
CURR_DIVISION_CD,
CURR_DIVISION_DESC,
CURR_DEPARTMENT_DESC,
CURR_DEPARTMENT_CD,
CURR_LEGAL_ENTITY_CD,
CURR_LEGAL_ENTITY_DESC,
CURR_LOB_CD,
CURR_LOB_DESC,
CURR_COST_CENTER_CD,
CURR_COST_CENTER_DESC,
CURR_COST_CENTER_ID,
CURR_LOB_CATEGORY,
CURR_LOCAL_USE_CD,
CURR_LOCAL_USE_DESC,
REC_SRC,
CREATED_DTM,
EFF_DT,
ROW_NUMBER() OVER (PARTITION BY 
    REGION_CD, AREA_CD, BUSINESS_UNIT_CD, DIVISION_CD, LOCAL_USE_CD, DEPARTMENT_CD
    ORDER BY EFF_DT) AS RN,
ROW_NUMBER() OVER (PARTITION BY
    ORG_SK,
    ORG_PK,
    DBT_HASH,
    COST_CENTER_CD,
    COST_CENTER_DESC,
    COST_CENTER_ID,
    LEGAL_ENTITY_CD,
    LEGAL_ENTITY_DESC,
    REGION_CD,
    REGION_DESC,
    AREA_CD,
    AREA_DESC,
    BUSINESS_UNIT_CD,
    BUSINESS_UNIT_DESC,
    DIVISION_CD,
    DIVISION_DESC,
    LOB_CATEGORY,
    LOB_CD,
    LOB_DESC,
    DEPARTMENT_CD,
    DEPARTMENT_DESC,
    LOCAL_USE_CD,
    LOCAL_USE_DESC,
    CURR_REGION_CD,
    CURR_REGION_DESC,
    CURR_AREA_CD,
    CURR_AREA_DESC,
    CURR_BUSINESS_UNIT_CD,
    CURR_BUSINESS_UNIT_DESC,
    CURR_DIVISION_CD,
    CURR_DIVISION_DESC,
    CURR_DEPARTMENT_DESC,
    CURR_DEPARTMENT_CD,
    CURR_LEGAL_ENTITY_CD,
    CURR_LEGAL_ENTITY_DESC,
    CURR_LOB_CD,
    CURR_LOB_DESC,
    CURR_COST_CENTER_CD,
    CURR_COST_CENTER_DESC,
    CURR_COST_CENTER_ID,
    CURR_LOB_CATEGORY,
    CURR_LOCAL_USE_CD,
    CURR_LOCAL_USE_DESC,
    REC_SRC,
    CREATED_DTM
    ORDER BY EFF_DT) AS RNO
FROM DISC_CTE
),

DE_DUP AS (
SELECT ORG_SK,
ORG_PK,
DBT_HASH,
COST_CENTER_CD,
COST_CENTER_DESC,
COST_CENTER_ID,
LEGAL_ENTITY_CD,
LEGAL_ENTITY_DESC,
REGION_CD,
REGION_DESC,
AREA_CD,
AREA_DESC,
BUSINESS_UNIT_CD,
BUSINESS_UNIT_DESC,
DIVISION_CD,
DIVISION_DESC,
LOB_CATEGORY,
LOB_CD,
LOB_DESC,
DEPARTMENT_CD,
DEPARTMENT_DESC,
LOCAL_USE_CD,
LOCAL_USE_DESC,
CURR_REGION_CD,
CURR_REGION_DESC,
CURR_AREA_CD,
CURR_AREA_DESC,
CURR_BUSINESS_UNIT_CD,
CURR_BUSINESS_UNIT_DESC,
CURR_DIVISION_CD,
CURR_DIVISION_DESC,
CURR_DEPARTMENT_DESC,
CURR_DEPARTMENT_CD,
CURR_LEGAL_ENTITY_CD,
CURR_LEGAL_ENTITY_DESC,
CURR_LOB_CD,
CURR_LOB_DESC,
CURR_COST_CENTER_CD,
CURR_COST_CENTER_DESC,
CURR_COST_CENTER_ID,
CURR_LOB_CATEGORY,
CURR_LOCAL_USE_CD,
CURR_LOCAL_USE_DESC,
REC_SRC,
CREATED_DTM,
EFF_DT,
ROW_NUMBER() OVER (PARTITION BY 
    ORG_SK,
    ORG_PK,
    DBT_HASH,
    COST_CENTER_CD,
    COST_CENTER_DESC,
    COST_CENTER_ID,
    LEGAL_ENTITY_CD,
    LEGAL_ENTITY_DESC,
    REGION_CD,
    REGION_DESC,
    AREA_CD,
    AREA_DESC,
    BUSINESS_UNIT_CD,
    BUSINESS_UNIT_DESC,
    DIVISION_CD,
    DIVISION_DESC,
    LOB_CATEGORY,
    LOB_CD,
    LOB_DESC,
    DEPARTMENT_CD,
    DEPARTMENT_DESC,
    LOCAL_USE_CD,
    LOCAL_USE_DESC,
    CURR_REGION_CD,
    CURR_REGION_DESC,
    CURR_AREA_CD,
    CURR_AREA_DESC,
    CURR_BUSINESS_UNIT_CD,
    CURR_BUSINESS_UNIT_DESC,
    CURR_DIVISION_CD,
    CURR_DIVISION_DESC,
    CURR_DEPARTMENT_DESC,
    CURR_DEPARTMENT_CD,
    CURR_LEGAL_ENTITY_CD,
    CURR_LEGAL_ENTITY_DESC,
    CURR_LOB_CD,
    CURR_LOB_DESC,
    CURR_COST_CENTER_CD,
    CURR_COST_CENTER_DESC,
    CURR_COST_CENTER_ID,
    CURR_LOB_CATEGORY,
    CURR_LOCAL_USE_CD,
    CURR_LOCAL_USE_DESC,
    REC_SRC,
    CREATED_DTM,
    RN-RNO
    ORDER BY EFF_DT) AS NUM
FROM DIM_ORG_2
)

SELECT
ORG_SK,
{{ dbt_utils.surrogate_key(['DIVISION_CD','LOCAL_USE_CD','DEPARTMENT_CD'])}} as ORG_PK,
DBT_HASH,
COST_CENTER_CD,
COST_CENTER_DESC,
COST_CENTER_ID,
LEGAL_ENTITY_CD,
LEGAL_ENTITY_DESC,
REGION_CD,
REGION_DESC,
AREA_CD,
AREA_DESC,
BUSINESS_UNIT_CD,
BUSINESS_UNIT_DESC,
DIVISION_CD,
DIVISION_DESC,
LOB_CATEGORY,
LOB_CD,
LOB_DESC,
DEPARTMENT_CD,
DEPARTMENT_DESC,
LOCAL_USE_CD,
LOCAL_USE_DESC,
CURR_REGION_CD,
CURR_REGION_DESC,
CURR_AREA_CD,
CURR_AREA_DESC,
CURR_BUSINESS_UNIT_CD,
CURR_BUSINESS_UNIT_DESC,
CURR_DIVISION_CD,
CURR_DIVISION_DESC,
CURR_DEPARTMENT_DESC,
CURR_DEPARTMENT_CD,
CURR_LEGAL_ENTITY_CD,
CURR_LEGAL_ENTITY_DESC,
CURR_LOB_CD,
CURR_LOB_DESC,
CURR_COST_CENTER_CD,
CURR_COST_CENTER_DESC,
CURR_COST_CENTER_ID,
CURR_LOB_CATEGORY,
CURR_LOCAL_USE_CD,
CURR_LOCAL_USE_DESC,
REC_SRC,
CREATED_DTM,
CURRENT_DATE() as RPT_EFF_DT,
to_date('9999-12-31') as DISC_DT,
TRUE::BOOLEAN AS IS_CURRENT,
TO_NUMBER(TO_VARCHAR(CURRENT_TIMESTAMP, 'YYYYMMDDHH24MISS')) AS INS_BATCH_ID,
TO_NUMBER(TO_VARCHAR(CURRENT_TIMESTAMP, 'YYYYMMDDHH24MISS')) AS UPD_BATCH_ID
FROM DE_DUP

